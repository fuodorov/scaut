from .base import *

from epics import caget, caput

# EPIC
try:
    caget("")
except Exception:
    ...
    
# GENERAL
NOISE_LEVEL = 0

VERIFY_MOTOR = True

DELAY = milli

TOLERANCE = 0.1

MAX_TRIES = 3

SAMPLE_SIZE = 10

SAVE_SCAN = True

DIRNAME_DATA = "data/prod"

SAVE_ORIGINAL_MOTOR_VALUES = True

PARALLEL = False

REPEAT = 1

GET_FUNC = caget

PUT_FUNC = caput

# MOTORS
DEFAULT_CORRECTOR_VALUES = [0] # A

DEFAULT_CORRECTOR_DELTA_KICK = 0.1

ALL_HORIZONTAL_CK_CORRECTORS = [  
    ["MG-LD:CKX1-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX2-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX3-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX4-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX5-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX6-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX7-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LD:CKX8-I:Set", DEFAULT_CORRECTOR_VALUES],
]

ALL_VERTICAL_CK_CORRECTORS = [[name.replace("CKX", "CKY"), limits] for name, limits in ALL_HORIZONTAL_CK_CORRECTORS]

ALL_HORIZONTAL_CL_CORRECTORS = [  
    ["MG-LA1:CLX1-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LA1:CLX2-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LA2:CLX3-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LA3:CLX4-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LA4:CLX5-I:Set", DEFAULT_CORRECTOR_VALUES],
    ["MG-LA5:CLX6-I:Set", DEFAULT_CORRECTOR_VALUES],
]

ALL_VERTICAL_CL_CORRECTORS = [[name.replace("CLX", "CLY"), limits] for name, limits in ALL_HORIZONTAL_CL_CORRECTORS]

ALL_CORRECTORS = ALL_HORIZONTAL_CK_CORRECTORS + ALL_VERTICAL_CK_CORRECTORS + ALL_HORIZONTAL_CL_CORRECTORS + ALL_VERTICAL_CL_CORRECTORS

#MONITORS
DEFAULT_POSITION_MONITOR_LIMITS = [-10, 10] # mm

DEFAULT_CURRENT_MONITOR_LIMITS = [0.0, 1] # mA

HORIZONTAL_POSITION_LG_MONITORS = [
    ["BI-LG:PK1-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LG:PK2-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],  
]

HORIZONTAL_POSITION_LA_MONITORS = [
    ["BI-LA1:PK3-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA2:PK4-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA3:PK5-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA4:PK6-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA5:PK7-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS], 
]

HORIZONTAL_POSITION_TB_MONITORS = [
    ["BI-TB1:PK1-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB1:PK2-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB1:PK3-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB1:PK4-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK5-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK6-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK7-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK8-fastAvX:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
]

VERTICAL_POSITION_LG_MONITORS = [
    ["BI-LG:PK1-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LG:PK2-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],  
]

VERTICAL_POSITION_LA_MONITORS = [
    ["BI-LA1:PK3-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA2:PK4-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA3:PK5-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA4:PK6-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-LA5:PK7-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS], 
]

VERTICAL_POSITION_TB_MONITORS = [
    ["BI-TB1:PK1-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB1:PK2-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB1:PK3-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB1:PK4-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK5-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK6-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK7-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
    ["BI-TB2:PK8-fastAvY:Mea", DEFAULT_POSITION_MONITOR_LIMITS],
]

ALL_HORIZONTAL_POSITION_MONITORS = HORIZONTAL_POSITION_LG_MONITORS + HORIZONTAL_POSITION_LA_MONITORS + HORIZONTAL_POSITION_TB_MONITORS

ALL_VERTICAL_POSITION_MONITORS = [[name.replace("AvX", "AvY"), limits] for name, limits in ALL_HORIZONTAL_POSITION_MONITORS]

ALL_POSITION_MONITORS = ALL_HORIZONTAL_POSITION_MONITORS + ALL_VERTICAL_POSITION_MONITORS

ALL_CURRENT_MONITORS = [[name.replace("AvX", "AvI"), DEFAULT_CURRENT_MONITOR_LIMITS] for name, _ in ALL_HORIZONTAL_POSITION_MONITORS]
